repeat wait() until game:IsLoaded()
print("Babaika Zagrushena")
wait(16)
local Event = game:GetService("ReplicatedStorage").Remotes["CommF_"]

local function setTeamToPirates()
    Event:InvokeServer("SetTeam", "Pirates")
end

setTeamToPirates()

local TweenService = game:GetService("TweenService")
local TeleportService = game:GetService("TeleportService")

local fruitsInWorkspace = {
--[[    "Rocket Fruit",
    "Spin Fruit",
    "Chop Fruit",
    "Spring Fruit",
    "Bomb Fruit",
    "Smoke Fruit",
    "Spike Fruit",
    "Flame Fruit",
    "Falcon Fruit",
    "Ice Fruit",
    "Sand Fruit",
    "Dark Fruit",
    "Diamond Fruit",
    "Light Fruit",
    "Rubber Fruit",
    "Barrier Fruit",
    "Ghost Fruit",
    "Magma Fruit",]]
    "Quake Fruit",
    "Buddha Fruit",
    "Love Fruit",
    "Spider Fruit",
    "Sound Fruit",
    "Phoenix Fruit",
    "Portal Fruit",
    "Rumble Fruit",
    "Pain Fruit",
    "Blizzard Fruit",
    "Gravity Fruit",
    "Mammoth Fruit",
    "T-Rex Fruit",
    "Dough Fruit",
    "Shadow Fruit",
    "Venom Fruit",
    "Control Fruit",
    "Spirit Fruit",
    "Gas Fruit",
    "Leopard Fruit",
    "Yeti Fruit",
    "Kitsune Fruit",
    "Dragon Fruit"
}

-- Список фруктов для события StoreFruit
local fruitsForEvent = {
--[[    "Rocket-Rocket",
    "Spin-Spin",
    "Chop-Chop",
    "Spring-Spring",
    "Bomb-Bomb",
    "Smoke-Smoke",
    "Spike-Spike",
    "Flame-Flame",
    "Falcon-Falcon",
    "Ice-Ice",
    "Sand-Sand",
    "Dark-Dark",
    "Diamond-Diamond",
    "Light-Light",
    "Rubber-Rubber",
    "Barrier-Barrier",
    "Ghost-Ghost",
    "Magma-Magma",]]
    "Quake-Quake",
    "Buddha-Buddha",
    "Love-Love",
    "Spider-Spider",
    "Sound-Sound",
    "Phoenix-Phoenix",
    "Portal-Portal",
    "Rumble-Rumble",
    "Pain-Pain",
    "Blizzard-Blizzard",
    "Gravity-Gravity",
    "Mammoth-Mammoth",
    "T-Rex-T-Rex",
    "Dough-Dough",
    "Shadow-Shadow",
    "Venom-Venom",
    "Control-Control",
    "Spirit-Spirit",
    "Gas-Gas",
    "Leopard-Leopard",
    "Yeti-Yeti",
    "Kitsune-Kitsune",
    "Dragon-Dragon"
}

-- Функция для вывода найденных фруктов в консоль
local function printFoundFruits()
    print("Найденные фрукты на сервере:")
    for _, fruitName in pairs(fruitsInWorkspace) do
        local fruit = game.Workspace:FindFirstChild(fruitName)
        if fruit then
            print("- " .. fruitName)
            local response = request({
                Url = 'https://discord.com/api/webhooks/1284439839436963921/ZDqCGr1euwFXp1G1JvHQZvmfhudM5NF1WgMVT4OmBgKg_PZ5GBvRXa7c5-7Pf0GEuOvd',
                Method = 'POST',
                Headers = {
                    ['Content-Type'] = 'application/json'
                },
                Body = game:GetService('HttpService'):JSONEncode({content = "Игрок " .. game.Players.LocalPlayer.Name .. " нашел фрукт: " .. fruitName})
            })
			wait(0.1)
			local response = request({
                Url = 'https://discord.com/api/webhooks/1273694343248609394/UC08L3lyaChhSPvIeHX09CqdD8SB0IpGMnf0o-DbUc_zRfHa6rxp-akMhwN72Nsx_1kI',
                Method = 'POST',
                Headers = {
                    ['Content-Type'] = 'application/json'
                },
                Body = game:GetService('HttpService'):JSONEncode({content = "Игрок " .. game.Players.LocalPlayer.Name .. " нашел фрукт: " .. fruitName})
            })
			wait(0.1)
        end
    end
end

printFoundFruits()

-- Проверка, есть ли фрукты в Workspace
local function checkFruitsExist()
    for _, fruitName in pairs(fruitsInWorkspace) do
        local fruit = game.Workspace:FindFirstChild(fruitName)
        if fruit then
            return true
        end
    end
    return false
end

-- Сохранение фруктов у игрока
local function storePlayerFruits()
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Cousin","Buy")
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local backpack = player.Backpack

    for i, fruitName in pairs(fruitsInWorkspace) do
        local fruitInBackpack = backpack:FindFirstChild(fruitName)
        local fruitInCharacter = character:FindFirstChild(fruitName)

        if fruitInBackpack then
            Event:InvokeServer("StoreFruit", fruitsForEvent[i], fruitInBackpack)
        elseif fruitInCharacter then
            Event:InvokeServer("StoreFruit", fruitsForEvent[i], fruitInCharacter)
        end
    end
end

-- Перемещение к фрукту
local function moveToFruit(fruit)
    local handle = fruit:FindFirstChild("Handle")
    if handle then
        local distance = (handle.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        local time = distance / 200
        local info = TweenInfo.new(time, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
        local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = handle.CFrame})
        tween:Play()
        tween.Completed:Wait()
    end
end

-- Телепортация на случайный сервер
local function teleportToNewServer()
    local currentPlaceId = game.PlaceId
    if not currentPlaceId == 7449423635 then
        TeleportService:Teleport(7449423635)
    else 
        TeleportService:Teleport(2753915549)
    end
end

-- Основной цикл
while true do
    wait(0.4)
    for i, fruitName in pairs(fruitsInWorkspace) do
        local fruit = game.Workspace:FindFirstChild(fruitName)
        if fruit then
            wait(2)
            moveToFruit(fruit)
            storePlayerFruits()
            storePlayerFruits()
        end
    end
    if not checkFruitsExist() then
        teleportToNewServer()
        break
    end
end
